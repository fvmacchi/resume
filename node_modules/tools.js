var Sequelize = require('sequelize');
var crypto = require('crypto');
var fs = require('fs');

var sequelize = new Sequelize('resume', 'root', 'password');

//Sequelize Model definitions
var Resume = sequelize.define('resume', {
  id: {
    primaryKey: true,
    type: Sequelize.STRING
  },
  title: Sequelize.STRING,
  skills: Sequelize.TEXT
});

var ResumeSkill = sequelize.define('resumeSkill', {
  id: {
    primaryKey: true,
    type: Sequelize.STRING
  },
  title: Sequelize.STRING,
  description: Sequelize.TEXT
});

var Company = sequelize.define('company', {
	id: {
		primaryKey: true,
		type: Sequelize.STRING
	},
	name: Sequelize.STRING
});

var Visit = sequelize.define('visit', {
	id: { primaryKey: true, type: Sequelize.INTEGER, autoIncrement: true },
	companyId: Sequelize.STRING,
	company: Sequelize.STRING,
	time: Sequelize.STRING,
	ip: Sequelize.STRING
});

//sequelize.sync();
/*
resumes = [
{
	id: "all",
	title: "Generic",
	skills: '["java", "c", "microcontrollers", "chips", "node", "git", "linux", "python", "dns", "soldering", "html", "android"]'
},
{
	id: "software",
	title: "Software",
	skills: '["java","c", "node", "git", "linux", "python", "html", "android"]'
},
{
	id: "embedded",
	title: "Embedded Systems",
	skills: '["c", "microcontrollers", "chips", "soldering", "java", "linux"]'
},
{
	id: "electrical",
	title: "Electrical",
	skills: '["chips", "microcontrollers", "soldering"]'
}
];

resumeSkills = [
{
	id: "java",
	title: "Java",
	description: "Proficient in Java. Used thoroughly in two job placements, and have been using it on and off for two years."
},
{
	id: "c",
	title: "C and C++",
	description: "Intermediate understanding of C and C++. Used for all university programming assignments. Used for real time embedded systems"
},
{
	id: "node",
	title: "Node.js & JavaScript",
	description: "Comfortable with Node.js and fluent in JavaScript. Used Node.js for creating a full stack web application."
},
{
	id: "git",
	title: "Git and SVN",
	description: "Git is used for all of my personal projects. Used SVN during my time at PointClickCare."
},
{
	id: "python",
	title: "Python",
	description: "Comfortable with Python. Created a personal web server written in Python."
},
{
	id: "linux",
	title: "Linux",
	description: "Comfortable with a Linux environment, specifically Ubuntu. All my personal projects are created in a Linux environment, as well as some work projects."
},
{
	id: "dns",
	title: "Network and DNS",
	description: "Strong knowledge of network design and DNS. Doubled as the IT guy at Lumotune."
},
{
	id: "html",
	title: "Web Technologies",
	description: "Very familiar with HTML, JQeury and SQL. All three appear in most of my personal projects."
},
{
	id: "android",
	title: "Android",
	description: "Basic knowledge of Android application structure. Have created very minimal applications in the past."
},
{
	id: "microcontrollers",
	title: "Microcontrollers",
	description: "Have used the Arduino for personal projects. Used the electric imp microcontroller extensively during a work term."
},
{
	id: "chips",
	title: "Integrated Circuits",
	description: "Very familiar with the use of various IC's as well as communicating with them using I2C. Have used shift registers and IO expanders."
},
{
	id: "soldering",
	title: "Soldering",
	description: "Experience soldering through hole and surface mount electronics through multiple class labs."
}
];*/

/*
var companyPairings = "";
var createCompany = function(i) {
	if(i < companies.length) {
		var hash = crypto.createHash('sha1');
		hash.update("secretSaltString" + companies[i].name);
		var id = hash.digest('hex');
		companies[i].id = id;
		companyPairings += id + " : " + companies[i].name + "\n";
		return Company.create(companies[i]).success(function() {
			createCompany(i + 1);
		});
	}
	fs.writeFile('companies.txt', companyPairings, function(){});
};
createCompany(0);



for(var i = 0; i < resumes.length; i++) {
	Resume.create(resumes[i]);
}

for(var i = 0; i < resumeSkills.length; i++) {
	ResumeSkill.create(resumeSkills[i]);
}
*/


exports.getResume = function(type, callback) {
	Resume.find({where: {id:type}}).success(function(resume) {
		var fetchedSkills = function() {
			callback(resume);
		};
		var skills = JSON.parse(resume.skills);
		if(skills.length == 0) {
			resume.skills = [];
			fetchedSkills();
		}
		else {
			var query = "SELECT * FROM resumeSkills where";
			for(var i = 0; i < skills.length; i++) {
				query += " id='" + skills[i] + "'"
				if(i != skills.length - 1) {
					query += " OR ";
				}
			}
			sequelize.query(query).success(function(skillRows) {
				var orderedSkills = [];
				for(var i = 0; i < skills.length; i++) {
					for(var k = 0; k < skillRows.length; k++) {
						if(skillRows[k].id == skills[i]) {
							orderedSkills.push(skillRows[k]);
							break;
						}
					}
				}
				resume.skills = orderedSkills;
				fetchedSkills();
			});
		}
	});
};

exports.getCompany = function(id, callback) {
	Company.find({where: {id: id}}).success(callback);
};

exports.addVisit = function(visit, callback) {
	visit.time = (new Date()).toString();
	Visit.create(visit).success(callback);
}